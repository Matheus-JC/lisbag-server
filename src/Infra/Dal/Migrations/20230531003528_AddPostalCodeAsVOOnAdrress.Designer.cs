// <auto-generated />
using System;
using LisbagServer.Infra.Dal.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace LisbagServer.Infra.Dal.Migrations
{
    [DbContext(typeof(UserProfileDbContext))]
    [Migration("20230531003528_AddPostalCodeAsVOOnAdrress")]
    partial class AddPostalCodeAsVOOnAdrress
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("profile")
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("LisbagServer.Domain.Entities.UserProfileAggregate.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("city");

                    b.Property<string>("Country")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("country");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_date");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.Property<string>("State")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("state");

                    b.Property<int?>("Type")
                        .HasColumnType("integer")
                        .HasColumnName("type");

                    b.Property<int?>("UserProfileId")
                        .HasColumnType("integer")
                        .HasColumnName("user_profile_id");

                    b.HasKey("Id")
                        .HasName("pk_address");

                    b.HasIndex("UserProfileId")
                        .HasDatabaseName("ix_address_user_profile_id");

                    b.ToTable("address", "profile");
                });

            modelBuilder.Entity("LisbagServer.Domain.Entities.UserProfileAggregate.Phone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_date");

                    b.Property<int>("InternationalAreaCode")
                        .HasMaxLength(2)
                        .HasColumnType("integer")
                        .HasColumnName("international_area_code");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified");

                    b.Property<int>("Number")
                        .HasMaxLength(9)
                        .HasColumnType("integer")
                        .HasColumnName("number");

                    b.Property<int>("Prefix")
                        .HasMaxLength(2)
                        .HasColumnType("integer")
                        .HasColumnName("prefix");

                    b.Property<int?>("UserProfileId")
                        .HasColumnType("integer")
                        .HasColumnName("user_profile_id");

                    b.HasKey("Id")
                        .HasName("pk_phone");

                    b.HasIndex("UserProfileId")
                        .HasDatabaseName("ix_phone_user_profile_id");

                    b.ToTable("phone", "profile");
                });

            modelBuilder.Entity("LisbagServer.Domain.Entities.UserProfileAggregate.UserProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_date");

                    b.Property<DateOnly?>("DateOfBirth")
                        .HasColumnType("date")
                        .HasColumnName("date_of_birth");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("email");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("name");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("surname");

                    b.HasKey("Id")
                        .HasName("pk_user_profile");

                    b.ToTable("user_profile", "profile");
                });

            modelBuilder.Entity("LisbagServer.Domain.Entities.UserProfileAggregate.Address", b =>
                {
                    b.HasOne("LisbagServer.Domain.Entities.UserProfileAggregate.UserProfile", null)
                        .WithMany("Addresses")
                        .HasForeignKey("UserProfileId")
                        .HasConstraintName("fk_address_user_profile_user_profile_id");

                    b.OwnsOne("LisbagServer.Domain.ValueObjects.PostalCode", "PostalCode", b1 =>
                        {
                            b1.Property<int>("AddressId")
                                .HasColumnType("integer")
                                .HasColumnName("id");

                            b1.Property<string>("Code")
                                .IsRequired()
                                .HasMaxLength(8)
                                .HasColumnType("character varying(8)")
                                .HasColumnName("postal_code");

                            b1.HasKey("AddressId");

                            b1.ToTable("address", "profile");

                            b1.WithOwner()
                                .HasForeignKey("AddressId")
                                .HasConstraintName("fk_address_address_id");
                        });

                    b.Navigation("PostalCode")
                        .IsRequired();
                });

            modelBuilder.Entity("LisbagServer.Domain.Entities.UserProfileAggregate.Phone", b =>
                {
                    b.HasOne("LisbagServer.Domain.Entities.UserProfileAggregate.UserProfile", null)
                        .WithMany("Phones")
                        .HasForeignKey("UserProfileId")
                        .HasConstraintName("fk_phone_user_profile_user_profile_id");
                });

            modelBuilder.Entity("LisbagServer.Domain.Entities.UserProfileAggregate.UserProfile", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Phones");
                });
#pragma warning restore 612, 618
        }
    }
}
